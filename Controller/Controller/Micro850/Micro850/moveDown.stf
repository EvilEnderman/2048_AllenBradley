FUNCTION moveDown

FOR iter := 0 TO 3 BY 1 DO
	FOR x := 3 TO 0 BY -1 DO
		FOR y := 2 TO 0 BY -1 DO
			//empty
			
			//bMerged := FALSE;	
	        //FOR merTest := 0 TO 3 BY 1 DO
				//IF diMergedArray[merTest,x] = TRUE THEN
					//bMerged := TRUE;
				//END_IF;
			//END_FOR;
			
			IF diNumArray[y+1,x] = 0 THEN
	            diNumArray[y+1,x] := diNumArray[y,x];

				FOR y2 := 2 TO y BY 1 DO
	                diNumArray[y,x] := diNumArray[y-1,x];
				END_FOR;

	            
	            //diNumArray[2,x] := diNumArray[3,x];
	            diNumArray[y,x] := 0;

			
			
			//Same and not already merged
	        ELSIF diNumArray[y+1,x] = diNumArray[y,x] AND diMergedArray[y+1,x] = FALSE AND diMergedArray[y,x] = FALSE THEN
	            //double
				diNumArray[y+1,x] := (diNumArray[y,x] * 2);
				udiScore := udiScore + ANY_TO_UDINT(diNumArray[y,x] * 2);
				//track merge
	            diMergedArray[y+1,x] := TRUE;
				
	            diNumArray[y,x] := 0;

				
	        END_IF;
			
		END_FOR;
	END_FOR;
END_FOR;
moveDown := TRUE;
END_FUNCTION